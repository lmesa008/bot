{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview \ud83e\udd9c Hyacinth is a Discord bot which will automatically send you notifications for new listings or postings anywhere on the web. Taking inspiration from the venerable youtube-dl , Hyacinth provides a core interface for filtering listings and sending notifications while allowing new listing sources to be added using a flexible plugin system. Hyacinth is offered only in self-hosted form. This means you are the \"administrator\" of the bot, which entails: You provide infrastructure for the bot to run on. If you turn the bot off, you will stop receiving notifications! You provide the necessary API credentials, both for Discord and for any other services used by the bot You ensure the bot stays updated Because of this, usage of this bot is recommended only for technically advanced users. Familiarity with Docker and comfort with the command-line are both required. In return, you free yourself from the limitations of existing notification services, gaining access to advanced features such as: Complex filtering rules, including text-based filtering using arbitrary boolean rules Customizable polling intervals, allowing full control over how often the bot checks for new listings Search batching, reducing the number of times listing sources are polled for each search and allowing for more searches before hitting the anti-bot measures many classified ad sites have in place When you're ready, head over to the Getting Started page!","title":"Overview"},{"location":"#overview","text":"Hyacinth is a Discord bot which will automatically send you notifications for new listings or postings anywhere on the web. Taking inspiration from the venerable youtube-dl , Hyacinth provides a core interface for filtering listings and sending notifications while allowing new listing sources to be added using a flexible plugin system. Hyacinth is offered only in self-hosted form. This means you are the \"administrator\" of the bot, which entails: You provide infrastructure for the bot to run on. If you turn the bot off, you will stop receiving notifications! You provide the necessary API credentials, both for Discord and for any other services used by the bot You ensure the bot stays updated Because of this, usage of this bot is recommended only for technically advanced users. Familiarity with Docker and comfort with the command-line are both required. In return, you free yourself from the limitations of existing notification services, gaining access to advanced features such as: Complex filtering rules, including text-based filtering using arbitrary boolean rules Customizable polling intervals, allowing full control over how often the bot checks for new listings Search batching, reducing the number of times listing sources are polled for each search and allowing for more searches before hitting the anti-bot measures many classified ad sites have in place When you're ready, head over to the Getting Started page!","title":"Overview \ud83e\udd9c"},{"location":"getting-started/","text":"Getting started The following guide will help you through the steps needed to run a minimal installation of Hyacinth. Creating the Discord Bot In order to connect Hyacinth to Discord, you must first configure an application for your bot in the Discord Developer Portal . In the Discord Developer Portal , create an application for Hyacinth In the Bot tab, add a new bot and configure the username and icon however you want Still in the Bot tab, enable the toggle for \"Message Content Intent\". This is required to allow executing commands using the $ prefix without mentioning the bot. Add an OAuth redirect URL in the OAuth2 -> General tab. This can be anything, the exact URL does not matter. Generate an invite URL in the OAuth2 -> URL Generator tab. Request the \"Bot\" scope and the following permissions: Copy the generated URL and invite the bot to your server! Configuring your environment Ensure Docker is installed and working correctly Clone the project repository In the cloned project folder, create a new file named .env with the following content: # in the unix tz database format, ex. America/New_York TZ=<your timezone> # copy it from the discord developer portal! DISCORD_TOKEN=<your discord token> # any password is fine, it will be used for the bot's internal database POSTGRES_USER=postgres POSTGRES_PASSWORD=<a random password> Remember to replace the values inside <> ! Running the bot After completing the steps above, start Hyacinth with the following Docker command: docker-compose up service If everything worked correctly, the bot's status in Discord will change to online and it will start accepting commands. After verifying that everything is working, exit with Ctrl+c and restart in detached mode so that the bot will continue to run even after closing the terminal window. docker-compose up -d service To stop the bot after this, use: docker-compose down","title":"Getting started"},{"location":"getting-started/#getting-started","text":"The following guide will help you through the steps needed to run a minimal installation of Hyacinth.","title":"Getting started"},{"location":"getting-started/#creating-the-discord-bot","text":"In order to connect Hyacinth to Discord, you must first configure an application for your bot in the Discord Developer Portal . In the Discord Developer Portal , create an application for Hyacinth In the Bot tab, add a new bot and configure the username and icon however you want Still in the Bot tab, enable the toggle for \"Message Content Intent\". This is required to allow executing commands using the $ prefix without mentioning the bot. Add an OAuth redirect URL in the OAuth2 -> General tab. This can be anything, the exact URL does not matter. Generate an invite URL in the OAuth2 -> URL Generator tab. Request the \"Bot\" scope and the following permissions: Copy the generated URL and invite the bot to your server!","title":"Creating the Discord Bot"},{"location":"getting-started/#configuring-your-environment","text":"Ensure Docker is installed and working correctly Clone the project repository In the cloned project folder, create a new file named .env with the following content: # in the unix tz database format, ex. America/New_York TZ=<your timezone> # copy it from the discord developer portal! DISCORD_TOKEN=<your discord token> # any password is fine, it will be used for the bot's internal database POSTGRES_USER=postgres POSTGRES_PASSWORD=<a random password> Remember to replace the values inside <> !","title":"Configuring your environment"},{"location":"getting-started/#running-the-bot","text":"After completing the steps above, start Hyacinth with the following Docker command: docker-compose up service If everything worked correctly, the bot's status in Discord will change to online and it will start accepting commands. After verifying that everything is working, exit with Ctrl+c and restart in detached mode so that the bot will continue to run even after closing the terminal window. docker-compose up -d service To stop the bot after this, use: docker-compose down","title":"Running the bot"}]}